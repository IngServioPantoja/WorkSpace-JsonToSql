/*
* generated by Xtext
*/
package co.edu.uniandes.jsonToSql.services;

import com.google.inject.Singleton;
import com.google.inject.Inject;

import java.util.List;

import org.eclipse.xtext.*;
import org.eclipse.xtext.service.GrammarProvider;
import org.eclipse.xtext.service.AbstractElementFinder.*;

import org.eclipse.xtext.common.services.TerminalsGrammarAccess;

@Singleton
public class GrammarGrammarAccess extends AbstractGrammarElementFinder {
	
	
	public class ConfigElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "Config");
		private final Group cGroup = (Group)rule.eContents().get(1);
		private final Keyword cConfigKeyword_0 = (Keyword)cGroup.eContents().get(0);
		private final Keyword cLeftCurlyBracketKeyword_1 = (Keyword)cGroup.eContents().get(1);
		private final Keyword cConecctionKeyword_2 = (Keyword)cGroup.eContents().get(2);
		private final Assignment cConecctionAssignment_3 = (Assignment)cGroup.eContents().get(3);
		private final RuleCall cConecctionConnectionParserRuleCall_3_0 = (RuleCall)cConecctionAssignment_3.eContents().get(0);
		private final Group cGroup_4 = (Group)cGroup.eContents().get(4);
		private final Keyword cMergeFieldsKeyword_4_0 = (Keyword)cGroup_4.eContents().get(0);
		private final Keyword cLeftSquareBracketKeyword_4_1 = (Keyword)cGroup_4.eContents().get(1);
		private final Assignment cMergeFieldsAssignment_4_2 = (Assignment)cGroup_4.eContents().get(2);
		private final RuleCall cMergeFieldsMergedFieldParserRuleCall_4_2_0 = (RuleCall)cMergeFieldsAssignment_4_2.eContents().get(0);
		private final Group cGroup_4_3 = (Group)cGroup_4.eContents().get(3);
		private final Keyword cCommaKeyword_4_3_0 = (Keyword)cGroup_4_3.eContents().get(0);
		private final Assignment cMergeFieldsAssignment_4_3_1 = (Assignment)cGroup_4_3.eContents().get(1);
		private final RuleCall cMergeFieldsMergedFieldParserRuleCall_4_3_1_0 = (RuleCall)cMergeFieldsAssignment_4_3_1.eContents().get(0);
		private final Keyword cRightSquareBracketKeyword_4_4 = (Keyword)cGroup_4.eContents().get(4);
		private final Keyword cRightCurlyBracketKeyword_5 = (Keyword)cGroup.eContents().get(5);
		
		//Config:
		//	"\'config\':" "{" "\'conecction:\'" conecction=Connection ("\'mergeFields\':" "[" mergeFields+=MergedField (","
		//	mergeFields+=MergedField)* "]")? "}";
		public ParserRule getRule() { return rule; }

		//"\'config\':" "{" "\'conecction:\'" conecction=Connection ("\'mergeFields\':" "[" mergeFields+=MergedField (","
		//mergeFields+=MergedField)* "]")? "}"
		public Group getGroup() { return cGroup; }

		//"\'config\':"
		public Keyword getConfigKeyword_0() { return cConfigKeyword_0; }

		//"{"
		public Keyword getLeftCurlyBracketKeyword_1() { return cLeftCurlyBracketKeyword_1; }

		//"\'conecction:\'"
		public Keyword getConecctionKeyword_2() { return cConecctionKeyword_2; }

		//conecction=Connection
		public Assignment getConecctionAssignment_3() { return cConecctionAssignment_3; }

		//Connection
		public RuleCall getConecctionConnectionParserRuleCall_3_0() { return cConecctionConnectionParserRuleCall_3_0; }

		//("\'mergeFields\':" "[" mergeFields+=MergedField ("," mergeFields+=MergedField)* "]")?
		public Group getGroup_4() { return cGroup_4; }

		//"\'mergeFields\':"
		public Keyword getMergeFieldsKeyword_4_0() { return cMergeFieldsKeyword_4_0; }

		//"["
		public Keyword getLeftSquareBracketKeyword_4_1() { return cLeftSquareBracketKeyword_4_1; }

		//mergeFields+=MergedField
		public Assignment getMergeFieldsAssignment_4_2() { return cMergeFieldsAssignment_4_2; }

		//MergedField
		public RuleCall getMergeFieldsMergedFieldParserRuleCall_4_2_0() { return cMergeFieldsMergedFieldParserRuleCall_4_2_0; }

		//("," mergeFields+=MergedField)*
		public Group getGroup_4_3() { return cGroup_4_3; }

		//","
		public Keyword getCommaKeyword_4_3_0() { return cCommaKeyword_4_3_0; }

		//mergeFields+=MergedField
		public Assignment getMergeFieldsAssignment_4_3_1() { return cMergeFieldsAssignment_4_3_1; }

		//MergedField
		public RuleCall getMergeFieldsMergedFieldParserRuleCall_4_3_1_0() { return cMergeFieldsMergedFieldParserRuleCall_4_3_1_0; }

		//"]"
		public Keyword getRightSquareBracketKeyword_4_4() { return cRightSquareBracketKeyword_4_4; }

		//"}"
		public Keyword getRightCurlyBracketKeyword_5() { return cRightCurlyBracketKeyword_5; }
	}

	public class ConnectionElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "Connection");
		private final Group cGroup = (Group)rule.eContents().get(1);
		private final Action cConnectionAction_0 = (Action)cGroup.eContents().get(0);
		private final Keyword cLeftCurlyBracketKeyword_1 = (Keyword)cGroup.eContents().get(1);
		private final Group cGroup_2 = (Group)cGroup.eContents().get(2);
		private final Keyword cUrlKeyword_2_0 = (Keyword)cGroup_2.eContents().get(0);
		private final Assignment cUrlAssignment_2_1 = (Assignment)cGroup_2.eContents().get(1);
		private final RuleCall cUrlEStringParserRuleCall_2_1_0 = (RuleCall)cUrlAssignment_2_1.eContents().get(0);
		private final Group cGroup_3 = (Group)cGroup.eContents().get(3);
		private final Keyword cUsernameKeyword_3_0 = (Keyword)cGroup_3.eContents().get(0);
		private final Assignment cUsernameAssignment_3_1 = (Assignment)cGroup_3.eContents().get(1);
		private final RuleCall cUsernameEStringParserRuleCall_3_1_0 = (RuleCall)cUsernameAssignment_3_1.eContents().get(0);
		private final Group cGroup_4 = (Group)cGroup.eContents().get(4);
		private final Keyword cPasswordKeyword_4_0 = (Keyword)cGroup_4.eContents().get(0);
		private final Assignment cPasswordAssignment_4_1 = (Assignment)cGroup_4.eContents().get(1);
		private final RuleCall cPasswordEStringParserRuleCall_4_1_0 = (RuleCall)cPasswordAssignment_4_1.eContents().get(0);
		private final Keyword cRightCurlyBracketKeyword_5 = (Keyword)cGroup.eContents().get(5);
		
		//Connection:
		//	{Connection} "{" ("\'url\':" url=EString)? ("\'username\':" username=EString)? ("\'password\':" password=EString)?
		//	"}";
		public ParserRule getRule() { return rule; }

		//{Connection} "{" ("\'url\':" url=EString)? ("\'username\':" username=EString)? ("\'password\':" password=EString)? "}"
		public Group getGroup() { return cGroup; }

		//{Connection}
		public Action getConnectionAction_0() { return cConnectionAction_0; }

		//"{"
		public Keyword getLeftCurlyBracketKeyword_1() { return cLeftCurlyBracketKeyword_1; }

		//("\'url\':" url=EString)?
		public Group getGroup_2() { return cGroup_2; }

		//"\'url\':"
		public Keyword getUrlKeyword_2_0() { return cUrlKeyword_2_0; }

		//url=EString
		public Assignment getUrlAssignment_2_1() { return cUrlAssignment_2_1; }

		//EString
		public RuleCall getUrlEStringParserRuleCall_2_1_0() { return cUrlEStringParserRuleCall_2_1_0; }

		//("\'username\':" username=EString)?
		public Group getGroup_3() { return cGroup_3; }

		//"\'username\':"
		public Keyword getUsernameKeyword_3_0() { return cUsernameKeyword_3_0; }

		//username=EString
		public Assignment getUsernameAssignment_3_1() { return cUsernameAssignment_3_1; }

		//EString
		public RuleCall getUsernameEStringParserRuleCall_3_1_0() { return cUsernameEStringParserRuleCall_3_1_0; }

		//("\'password\':" password=EString)?
		public Group getGroup_4() { return cGroup_4; }

		//"\'password\':"
		public Keyword getPasswordKeyword_4_0() { return cPasswordKeyword_4_0; }

		//password=EString
		public Assignment getPasswordAssignment_4_1() { return cPasswordAssignment_4_1; }

		//EString
		public RuleCall getPasswordEStringParserRuleCall_4_1_0() { return cPasswordEStringParserRuleCall_4_1_0; }

		//"}"
		public Keyword getRightCurlyBracketKeyword_5() { return cRightCurlyBracketKeyword_5; }
	}

	public class MergedFieldElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "MergedField");
		private final Group cGroup = (Group)rule.eContents().get(1);
		private final Keyword cLeftCurlyBracketKeyword_0 = (Keyword)cGroup.eContents().get(0);
		private final Group cGroup_1 = (Group)cGroup.eContents().get(1);
		private final Keyword cTableNameKeyword_1_0 = (Keyword)cGroup_1.eContents().get(0);
		private final Assignment cTableNameAssignment_1_1 = (Assignment)cGroup_1.eContents().get(1);
		private final RuleCall cTableNameEStringParserRuleCall_1_1_0 = (RuleCall)cTableNameAssignment_1_1.eContents().get(0);
		private final Keyword cFieldsKeyword_2 = (Keyword)cGroup.eContents().get(2);
		private final Keyword cLeftSquareBracketKeyword_3 = (Keyword)cGroup.eContents().get(3);
		private final Assignment cFieldsAssignment_4 = (Assignment)cGroup.eContents().get(4);
		private final RuleCall cFieldsFieldParserRuleCall_4_0 = (RuleCall)cFieldsAssignment_4.eContents().get(0);
		private final Group cGroup_5 = (Group)cGroup.eContents().get(5);
		private final Keyword cCommaKeyword_5_0 = (Keyword)cGroup_5.eContents().get(0);
		private final Assignment cFieldsAssignment_5_1 = (Assignment)cGroup_5.eContents().get(1);
		private final RuleCall cFieldsFieldParserRuleCall_5_1_0 = (RuleCall)cFieldsAssignment_5_1.eContents().get(0);
		private final Keyword cRightSquareBracketKeyword_6 = (Keyword)cGroup.eContents().get(6);
		private final Keyword cAttributeNamesKeyword_7 = (Keyword)cGroup.eContents().get(7);
		private final Keyword cLeftSquareBracketKeyword_8 = (Keyword)cGroup.eContents().get(8);
		private final Assignment cAttributeNamesAssignment_9 = (Assignment)cGroup.eContents().get(9);
		private final RuleCall cAttributeNamesAttributeNameParserRuleCall_9_0 = (RuleCall)cAttributeNamesAssignment_9.eContents().get(0);
		private final Group cGroup_10 = (Group)cGroup.eContents().get(10);
		private final Keyword cCommaKeyword_10_0 = (Keyword)cGroup_10.eContents().get(0);
		private final Assignment cAttributeNamesAssignment_10_1 = (Assignment)cGroup_10.eContents().get(1);
		private final RuleCall cAttributeNamesAttributeNameParserRuleCall_10_1_0 = (RuleCall)cAttributeNamesAssignment_10_1.eContents().get(0);
		private final Keyword cRightSquareBracketKeyword_11 = (Keyword)cGroup.eContents().get(11);
		private final Keyword cRightCurlyBracketKeyword_12 = (Keyword)cGroup.eContents().get(12);
		
		//MergedField:
		//	"{" ("\'tableName\':" tableName=EString)? "\'fields\':" "[" fields+=Field ("," fields+=Field)* "]"
		//	"\'attributeNames\':" "[" attributeNames+=AttributeName ("," attributeNames+=AttributeName)* "]" "}";
		public ParserRule getRule() { return rule; }

		//"{" ("\'tableName\':" tableName=EString)? "\'fields\':" "[" fields+=Field ("," fields+=Field)* "]" "\'attributeNames\':"
		//"[" attributeNames+=AttributeName ("," attributeNames+=AttributeName)* "]" "}"
		public Group getGroup() { return cGroup; }

		//"{"
		public Keyword getLeftCurlyBracketKeyword_0() { return cLeftCurlyBracketKeyword_0; }

		//("\'tableName\':" tableName=EString)?
		public Group getGroup_1() { return cGroup_1; }

		//"\'tableName\':"
		public Keyword getTableNameKeyword_1_0() { return cTableNameKeyword_1_0; }

		//tableName=EString
		public Assignment getTableNameAssignment_1_1() { return cTableNameAssignment_1_1; }

		//EString
		public RuleCall getTableNameEStringParserRuleCall_1_1_0() { return cTableNameEStringParserRuleCall_1_1_0; }

		//"\'fields\':"
		public Keyword getFieldsKeyword_2() { return cFieldsKeyword_2; }

		//"["
		public Keyword getLeftSquareBracketKeyword_3() { return cLeftSquareBracketKeyword_3; }

		//fields+=Field
		public Assignment getFieldsAssignment_4() { return cFieldsAssignment_4; }

		//Field
		public RuleCall getFieldsFieldParserRuleCall_4_0() { return cFieldsFieldParserRuleCall_4_0; }

		//("," fields+=Field)*
		public Group getGroup_5() { return cGroup_5; }

		//","
		public Keyword getCommaKeyword_5_0() { return cCommaKeyword_5_0; }

		//fields+=Field
		public Assignment getFieldsAssignment_5_1() { return cFieldsAssignment_5_1; }

		//Field
		public RuleCall getFieldsFieldParserRuleCall_5_1_0() { return cFieldsFieldParserRuleCall_5_1_0; }

		//"]"
		public Keyword getRightSquareBracketKeyword_6() { return cRightSquareBracketKeyword_6; }

		//"\'attributeNames\':"
		public Keyword getAttributeNamesKeyword_7() { return cAttributeNamesKeyword_7; }

		//"["
		public Keyword getLeftSquareBracketKeyword_8() { return cLeftSquareBracketKeyword_8; }

		//attributeNames+=AttributeName
		public Assignment getAttributeNamesAssignment_9() { return cAttributeNamesAssignment_9; }

		//AttributeName
		public RuleCall getAttributeNamesAttributeNameParserRuleCall_9_0() { return cAttributeNamesAttributeNameParserRuleCall_9_0; }

		//("," attributeNames+=AttributeName)*
		public Group getGroup_10() { return cGroup_10; }

		//","
		public Keyword getCommaKeyword_10_0() { return cCommaKeyword_10_0; }

		//attributeNames+=AttributeName
		public Assignment getAttributeNamesAssignment_10_1() { return cAttributeNamesAssignment_10_1; }

		//AttributeName
		public RuleCall getAttributeNamesAttributeNameParserRuleCall_10_1_0() { return cAttributeNamesAttributeNameParserRuleCall_10_1_0; }

		//"]"
		public Keyword getRightSquareBracketKeyword_11() { return cRightSquareBracketKeyword_11; }

		//"}"
		public Keyword getRightCurlyBracketKeyword_12() { return cRightCurlyBracketKeyword_12; }
	}

	public class EStringElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "EString");
		private final Alternatives cAlternatives = (Alternatives)rule.eContents().get(1);
		private final RuleCall cSTRINGTerminalRuleCall_0 = (RuleCall)cAlternatives.eContents().get(0);
		private final RuleCall cIDTerminalRuleCall_1 = (RuleCall)cAlternatives.eContents().get(1);
		
		//EString returns ecore::EString:
		//	STRING | ID;
		public ParserRule getRule() { return rule; }

		//STRING | ID
		public Alternatives getAlternatives() { return cAlternatives; }

		//STRING
		public RuleCall getSTRINGTerminalRuleCall_0() { return cSTRINGTerminalRuleCall_0; }

		//ID
		public RuleCall getIDTerminalRuleCall_1() { return cIDTerminalRuleCall_1; }
	}

	public class AttributeNameElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "AttributeName");
		private final Group cGroup = (Group)rule.eContents().get(1);
		private final Keyword cLeftCurlyBracketKeyword_0 = (Keyword)cGroup.eContents().get(0);
		private final Assignment cOldFieldAssignment_1 = (Assignment)cGroup.eContents().get(1);
		private final RuleCall cOldFieldEStringParserRuleCall_1_0 = (RuleCall)cOldFieldAssignment_1.eContents().get(0);
		private final Keyword cCommaKeyword_2 = (Keyword)cGroup.eContents().get(2);
		private final Assignment cFinalFieldAssignment_3 = (Assignment)cGroup.eContents().get(3);
		private final CrossReference cFinalFieldFieldCrossReference_3_0 = (CrossReference)cFinalFieldAssignment_3.eContents().get(0);
		private final RuleCall cFinalFieldFieldEStringParserRuleCall_3_0_1 = (RuleCall)cFinalFieldFieldCrossReference_3_0.eContents().get(1);
		private final Keyword cRightCurlyBracketKeyword_4 = (Keyword)cGroup.eContents().get(4);
		
		//AttributeName:
		//	"{" oldField=EString? "," finalField=[Field|EString] "}";
		public ParserRule getRule() { return rule; }

		//"{" oldField=EString? "," finalField=[Field|EString] "}"
		public Group getGroup() { return cGroup; }

		//"{"
		public Keyword getLeftCurlyBracketKeyword_0() { return cLeftCurlyBracketKeyword_0; }

		//oldField=EString?
		public Assignment getOldFieldAssignment_1() { return cOldFieldAssignment_1; }

		//EString
		public RuleCall getOldFieldEStringParserRuleCall_1_0() { return cOldFieldEStringParserRuleCall_1_0; }

		//","
		public Keyword getCommaKeyword_2() { return cCommaKeyword_2; }

		//finalField=[Field|EString]
		public Assignment getFinalFieldAssignment_3() { return cFinalFieldAssignment_3; }

		//[Field|EString]
		public CrossReference getFinalFieldFieldCrossReference_3_0() { return cFinalFieldFieldCrossReference_3_0; }

		//EString
		public RuleCall getFinalFieldFieldEStringParserRuleCall_3_0_1() { return cFinalFieldFieldEStringParserRuleCall_3_0_1; }

		//"}"
		public Keyword getRightCurlyBracketKeyword_4() { return cRightCurlyBracketKeyword_4; }
	}

	public class FieldElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "Field");
		private final Group cGroup = (Group)rule.eContents().get(1);
		private final Action cFieldAction_0 = (Action)cGroup.eContents().get(0);
		private final Keyword cLeftCurlyBracketKeyword_1 = (Keyword)cGroup.eContents().get(1);
		private final Assignment cNameAssignment_2 = (Assignment)cGroup.eContents().get(2);
		private final RuleCall cNameEStringParserRuleCall_2_0 = (RuleCall)cNameAssignment_2.eContents().get(0);
		private final Assignment cTypeAssignment_3 = (Assignment)cGroup.eContents().get(3);
		private final RuleCall cTypeFieldTypeEnumRuleCall_3_0 = (RuleCall)cTypeAssignment_3.eContents().get(0);
		private final Keyword cRightCurlyBracketKeyword_4 = (Keyword)cGroup.eContents().get(4);
		
		//Field:
		//	{Field} "{" name=EString type=FieldType? "}";
		public ParserRule getRule() { return rule; }

		//{Field} "{" name=EString type=FieldType? "}"
		public Group getGroup() { return cGroup; }

		//{Field}
		public Action getFieldAction_0() { return cFieldAction_0; }

		//"{"
		public Keyword getLeftCurlyBracketKeyword_1() { return cLeftCurlyBracketKeyword_1; }

		//name=EString
		public Assignment getNameAssignment_2() { return cNameAssignment_2; }

		//EString
		public RuleCall getNameEStringParserRuleCall_2_0() { return cNameEStringParserRuleCall_2_0; }

		//type=FieldType?
		public Assignment getTypeAssignment_3() { return cTypeAssignment_3; }

		//FieldType
		public RuleCall getTypeFieldTypeEnumRuleCall_3_0() { return cTypeFieldTypeEnumRuleCall_3_0; }

		//"}"
		public Keyword getRightCurlyBracketKeyword_4() { return cRightCurlyBracketKeyword_4; }
	}
	
	
	public class FieldTypeElements extends AbstractEnumRuleElementFinder {
		private final EnumRule rule = (EnumRule) GrammarUtil.findRuleForName(getGrammar(), "FieldType");
		private final Alternatives cAlternatives = (Alternatives)rule.eContents().get(1);
		private final EnumLiteralDeclaration cStringEnumLiteralDeclaration_0 = (EnumLiteralDeclaration)cAlternatives.eContents().get(0);
		private final Keyword cStringStringKeyword_0_0 = (Keyword)cStringEnumLiteralDeclaration_0.eContents().get(0);
		private final EnumLiteralDeclaration cIntegerEnumLiteralDeclaration_1 = (EnumLiteralDeclaration)cAlternatives.eContents().get(1);
		private final Keyword cIntegerIntegerKeyword_1_0 = (Keyword)cIntegerEnumLiteralDeclaration_1.eContents().get(0);
		private final EnumLiteralDeclaration cFloatEnumLiteralDeclaration_2 = (EnumLiteralDeclaration)cAlternatives.eContents().get(2);
		private final Keyword cFloatFloatKeyword_2_0 = (Keyword)cFloatEnumLiteralDeclaration_2.eContents().get(0);
		private final EnumLiteralDeclaration cBooleanEnumLiteralDeclaration_3 = (EnumLiteralDeclaration)cAlternatives.eContents().get(3);
		private final Keyword cBooleanBooleanKeyword_3_0 = (Keyword)cBooleanEnumLiteralDeclaration_3.eContents().get(0);
		
		//enum FieldType:
		//	String | Integer | Float | Boolean;
		public EnumRule getRule() { return rule; }

		//String | Integer | Float | Boolean
		public Alternatives getAlternatives() { return cAlternatives; }

		//String
		public EnumLiteralDeclaration getStringEnumLiteralDeclaration_0() { return cStringEnumLiteralDeclaration_0; }

		//"String"
		public Keyword getStringStringKeyword_0_0() { return cStringStringKeyword_0_0; }

		//Integer
		public EnumLiteralDeclaration getIntegerEnumLiteralDeclaration_1() { return cIntegerEnumLiteralDeclaration_1; }

		//"Integer"
		public Keyword getIntegerIntegerKeyword_1_0() { return cIntegerIntegerKeyword_1_0; }

		//Float
		public EnumLiteralDeclaration getFloatEnumLiteralDeclaration_2() { return cFloatEnumLiteralDeclaration_2; }

		//"Float"
		public Keyword getFloatFloatKeyword_2_0() { return cFloatFloatKeyword_2_0; }

		//Boolean
		public EnumLiteralDeclaration getBooleanEnumLiteralDeclaration_3() { return cBooleanEnumLiteralDeclaration_3; }

		//"Boolean"
		public Keyword getBooleanBooleanKeyword_3_0() { return cBooleanBooleanKeyword_3_0; }
	}
	
	private final ConfigElements pConfig;
	private final ConnectionElements pConnection;
	private final MergedFieldElements pMergedField;
	private final EStringElements pEString;
	private final AttributeNameElements pAttributeName;
	private final FieldElements pField;
	private final FieldTypeElements unknownRuleFieldType;
	
	private final Grammar grammar;

	private final TerminalsGrammarAccess gaTerminals;

	@Inject
	public GrammarGrammarAccess(GrammarProvider grammarProvider,
		TerminalsGrammarAccess gaTerminals) {
		this.grammar = internalFindGrammar(grammarProvider);
		this.gaTerminals = gaTerminals;
		this.pConfig = new ConfigElements();
		this.pConnection = new ConnectionElements();
		this.pMergedField = new MergedFieldElements();
		this.pEString = new EStringElements();
		this.pAttributeName = new AttributeNameElements();
		this.pField = new FieldElements();
		this.unknownRuleFieldType = new FieldTypeElements();
	}
	
	protected Grammar internalFindGrammar(GrammarProvider grammarProvider) {
		Grammar grammar = grammarProvider.getGrammar(this);
		while (grammar != null) {
			if ("co.edu.uniandes.jsonToSql.Grammar".equals(grammar.getName())) {
				return grammar;
			}
			List<Grammar> grammars = grammar.getUsedGrammars();
			if (!grammars.isEmpty()) {
				grammar = grammars.iterator().next();
			} else {
				return null;
			}
		}
		return grammar;
	}
	
	
	public Grammar getGrammar() {
		return grammar;
	}
	

	public TerminalsGrammarAccess getTerminalsGrammarAccess() {
		return gaTerminals;
	}

	
	//Config:
	//	"\'config\':" "{" "\'conecction:\'" conecction=Connection ("\'mergeFields\':" "[" mergeFields+=MergedField (","
	//	mergeFields+=MergedField)* "]")? "}";
	public ConfigElements getConfigAccess() {
		return pConfig;
	}
	
	public ParserRule getConfigRule() {
		return getConfigAccess().getRule();
	}

	//Connection:
	//	{Connection} "{" ("\'url\':" url=EString)? ("\'username\':" username=EString)? ("\'password\':" password=EString)?
	//	"}";
	public ConnectionElements getConnectionAccess() {
		return pConnection;
	}
	
	public ParserRule getConnectionRule() {
		return getConnectionAccess().getRule();
	}

	//MergedField:
	//	"{" ("\'tableName\':" tableName=EString)? "\'fields\':" "[" fields+=Field ("," fields+=Field)* "]"
	//	"\'attributeNames\':" "[" attributeNames+=AttributeName ("," attributeNames+=AttributeName)* "]" "}";
	public MergedFieldElements getMergedFieldAccess() {
		return pMergedField;
	}
	
	public ParserRule getMergedFieldRule() {
		return getMergedFieldAccess().getRule();
	}

	//EString returns ecore::EString:
	//	STRING | ID;
	public EStringElements getEStringAccess() {
		return pEString;
	}
	
	public ParserRule getEStringRule() {
		return getEStringAccess().getRule();
	}

	//AttributeName:
	//	"{" oldField=EString? "," finalField=[Field|EString] "}";
	public AttributeNameElements getAttributeNameAccess() {
		return pAttributeName;
	}
	
	public ParserRule getAttributeNameRule() {
		return getAttributeNameAccess().getRule();
	}

	//Field:
	//	{Field} "{" name=EString type=FieldType? "}";
	public FieldElements getFieldAccess() {
		return pField;
	}
	
	public ParserRule getFieldRule() {
		return getFieldAccess().getRule();
	}

	//enum FieldType:
	//	String | Integer | Float | Boolean;
	public FieldTypeElements getFieldTypeAccess() {
		return unknownRuleFieldType;
	}
	
	public EnumRule getFieldTypeRule() {
		return getFieldTypeAccess().getRule();
	}

	//terminal ID:
	//	"^"? ("a".."z" | "A".."Z" | "_") ("a".."z" | "A".."Z" | "_" | "0".."9")*;
	public TerminalRule getIDRule() {
		return gaTerminals.getIDRule();
	} 

	//terminal INT returns ecore::EInt:
	//	"0".."9"+;
	public TerminalRule getINTRule() {
		return gaTerminals.getINTRule();
	} 

	//terminal STRING:
	//	"\"" ("\\" . / * 'b'|'t'|'n'|'f'|'r'|'u'|'"'|"'"|'\\' * / | !("\\" | "\""))* "\"" | "\'" ("\\" .
	//	/ * 'b'|'t'|'n'|'f'|'r'|'u'|'"'|"'"|'\\' * / | !("\\" | "\'"))* "\'";
	public TerminalRule getSTRINGRule() {
		return gaTerminals.getSTRINGRule();
	} 

	//terminal ML_COMMENT:
	//	"/ *"->"* /";
	public TerminalRule getML_COMMENTRule() {
		return gaTerminals.getML_COMMENTRule();
	} 

	//terminal SL_COMMENT:
	//	"//" !("\n" | "\r")* ("\r"? "\n")?;
	public TerminalRule getSL_COMMENTRule() {
		return gaTerminals.getSL_COMMENTRule();
	} 

	//terminal WS:
	//	(" " | "\t" | "\r" | "\n")+;
	public TerminalRule getWSRule() {
		return gaTerminals.getWSRule();
	} 

	//terminal ANY_OTHER:
	//	.;
	public TerminalRule getANY_OTHERRule() {
		return gaTerminals.getANY_OTHERRule();
	} 
}
