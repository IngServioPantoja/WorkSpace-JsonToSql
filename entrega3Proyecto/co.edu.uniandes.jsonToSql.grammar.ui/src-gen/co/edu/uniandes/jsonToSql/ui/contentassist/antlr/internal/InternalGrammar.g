/*
* generated by Xtext
*/
grammar InternalGrammar;

options {
	superClass=AbstractInternalContentAssistParser;
	
}

@lexer::header {
package co.edu.uniandes.jsonToSql.ui.contentassist.antlr.internal;

// Hack: Use our own Lexer superclass by means of import. 
// Currently there is no other way to specify the superclass for the lexer.
import org.eclipse.xtext.ui.editor.contentassist.antlr.internal.Lexer;
}

@parser::header {
package co.edu.uniandes.jsonToSql.ui.contentassist.antlr.internal; 

import java.io.InputStream;
import org.eclipse.xtext.*;
import org.eclipse.xtext.parser.*;
import org.eclipse.xtext.parser.impl.*;
import org.eclipse.emf.ecore.util.EcoreUtil;
import org.eclipse.emf.ecore.EObject;
import org.eclipse.xtext.parser.antlr.XtextTokenStream;
import org.eclipse.xtext.parser.antlr.XtextTokenStream.HiddenTokens;
import org.eclipse.xtext.ui.editor.contentassist.antlr.internal.AbstractInternalContentAssistParser;
import org.eclipse.xtext.ui.editor.contentassist.antlr.internal.DFA;
import co.edu.uniandes.jsonToSql.services.GrammarGrammarAccess;

}

@parser::members {
 
 	private GrammarGrammarAccess grammarAccess;
 	
    public void setGrammarAccess(GrammarGrammarAccess grammarAccess) {
    	this.grammarAccess = grammarAccess;
    }
    
    @Override
    protected Grammar getGrammar() {
    	return grammarAccess.getGrammar();
    }
    
    @Override
    protected String getValueForTokenName(String tokenName) {
    	return tokenName;
    }

}




// Entry rule entryRuleConfig
entryRuleConfig 
:
{ before(grammarAccess.getConfigRule()); }
	 ruleConfig
{ after(grammarAccess.getConfigRule()); } 
	 EOF 
;

// Rule Config
ruleConfig
    @init {
		int stackSize = keepStackSize();
    }
	:
(
{ before(grammarAccess.getConfigAccess().getGroup()); }
(rule__Config__Group__0)
{ after(grammarAccess.getConfigAccess().getGroup()); }
)

;
finally {
	restoreStackSize(stackSize);
}



// Entry rule entryRuleConnection
entryRuleConnection 
:
{ before(grammarAccess.getConnectionRule()); }
	 ruleConnection
{ after(grammarAccess.getConnectionRule()); } 
	 EOF 
;

// Rule Connection
ruleConnection
    @init {
		int stackSize = keepStackSize();
    }
	:
(
{ before(grammarAccess.getConnectionAccess().getGroup()); }
(rule__Connection__Group__0)
{ after(grammarAccess.getConnectionAccess().getGroup()); }
)

;
finally {
	restoreStackSize(stackSize);
}



// Entry rule entryRuleMergedField
entryRuleMergedField 
:
{ before(grammarAccess.getMergedFieldRule()); }
	 ruleMergedField
{ after(grammarAccess.getMergedFieldRule()); } 
	 EOF 
;

// Rule MergedField
ruleMergedField
    @init {
		int stackSize = keepStackSize();
    }
	:
(
{ before(grammarAccess.getMergedFieldAccess().getGroup()); }
(rule__MergedField__Group__0)
{ after(grammarAccess.getMergedFieldAccess().getGroup()); }
)

;
finally {
	restoreStackSize(stackSize);
}



// Entry rule entryRuleEString
entryRuleEString 
:
{ before(grammarAccess.getEStringRule()); }
	 ruleEString
{ after(grammarAccess.getEStringRule()); } 
	 EOF 
;

// Rule EString
ruleEString
    @init {
		int stackSize = keepStackSize();
    }
	:
(
{ before(grammarAccess.getEStringAccess().getAlternatives()); }
(rule__EString__Alternatives)
{ after(grammarAccess.getEStringAccess().getAlternatives()); }
)

;
finally {
	restoreStackSize(stackSize);
}



// Entry rule entryRuleAttributeName
entryRuleAttributeName 
:
{ before(grammarAccess.getAttributeNameRule()); }
	 ruleAttributeName
{ after(grammarAccess.getAttributeNameRule()); } 
	 EOF 
;

// Rule AttributeName
ruleAttributeName
    @init {
		int stackSize = keepStackSize();
    }
	:
(
{ before(grammarAccess.getAttributeNameAccess().getGroup()); }
(rule__AttributeName__Group__0)
{ after(grammarAccess.getAttributeNameAccess().getGroup()); }
)

;
finally {
	restoreStackSize(stackSize);
}



// Entry rule entryRuleField
entryRuleField 
:
{ before(grammarAccess.getFieldRule()); }
	 ruleField
{ after(grammarAccess.getFieldRule()); } 
	 EOF 
;

// Rule Field
ruleField
    @init {
		int stackSize = keepStackSize();
    }
	:
(
{ before(grammarAccess.getFieldAccess().getGroup()); }
(rule__Field__Group__0)
{ after(grammarAccess.getFieldAccess().getGroup()); }
)

;
finally {
	restoreStackSize(stackSize);
}




// Rule FieldType
ruleFieldType
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getFieldTypeAccess().getAlternatives()); }
(rule__FieldType__Alternatives)
{ after(grammarAccess.getFieldTypeAccess().getAlternatives()); }
)

;
finally {
	restoreStackSize(stackSize);
}



rule__EString__Alternatives
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getEStringAccess().getSTRINGTerminalRuleCall_0()); }
	RULE_STRING
{ after(grammarAccess.getEStringAccess().getSTRINGTerminalRuleCall_0()); }
)

    |(
{ before(grammarAccess.getEStringAccess().getIDTerminalRuleCall_1()); }
	RULE_ID
{ after(grammarAccess.getEStringAccess().getIDTerminalRuleCall_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__FieldType__Alternatives
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getFieldTypeAccess().getStringEnumLiteralDeclaration_0()); }
(	'String' 
)
{ after(grammarAccess.getFieldTypeAccess().getStringEnumLiteralDeclaration_0()); }
)

    |(
{ before(grammarAccess.getFieldTypeAccess().getIntegerEnumLiteralDeclaration_1()); }
(	'Integer' 
)
{ after(grammarAccess.getFieldTypeAccess().getIntegerEnumLiteralDeclaration_1()); }
)

    |(
{ before(grammarAccess.getFieldTypeAccess().getFloatEnumLiteralDeclaration_2()); }
(	'Float' 
)
{ after(grammarAccess.getFieldTypeAccess().getFloatEnumLiteralDeclaration_2()); }
)

    |(
{ before(grammarAccess.getFieldTypeAccess().getBooleanEnumLiteralDeclaration_3()); }
(	'Boolean' 
)
{ after(grammarAccess.getFieldTypeAccess().getBooleanEnumLiteralDeclaration_3()); }
)

;
finally {
	restoreStackSize(stackSize);
}



rule__Config__Group__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Config__Group__0__Impl
	rule__Config__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Config__Group__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getConfigAccess().getConfigKeyword_0()); }

	'\'config\':' 

{ after(grammarAccess.getConfigAccess().getConfigKeyword_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Config__Group__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Config__Group__1__Impl
	rule__Config__Group__2
;
finally {
	restoreStackSize(stackSize);
}

rule__Config__Group__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getConfigAccess().getLeftCurlyBracketKeyword_1()); }

	'{' 

{ after(grammarAccess.getConfigAccess().getLeftCurlyBracketKeyword_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Config__Group__2
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Config__Group__2__Impl
	rule__Config__Group__3
;
finally {
	restoreStackSize(stackSize);
}

rule__Config__Group__2__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getConfigAccess().getConecctionKeyword_2()); }

	'conecction:' 

{ after(grammarAccess.getConfigAccess().getConecctionKeyword_2()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Config__Group__3
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Config__Group__3__Impl
	rule__Config__Group__4
;
finally {
	restoreStackSize(stackSize);
}

rule__Config__Group__3__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getConfigAccess().getConecctionAssignment_3()); }
(rule__Config__ConecctionAssignment_3)
{ after(grammarAccess.getConfigAccess().getConecctionAssignment_3()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Config__Group__4
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Config__Group__4__Impl
	rule__Config__Group__5
;
finally {
	restoreStackSize(stackSize);
}

rule__Config__Group__4__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getConfigAccess().getGroup_4()); }
(rule__Config__Group_4__0)?
{ after(grammarAccess.getConfigAccess().getGroup_4()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Config__Group__5
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Config__Group__5__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Config__Group__5__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getConfigAccess().getRightCurlyBracketKeyword_5()); }

	'}' 

{ after(grammarAccess.getConfigAccess().getRightCurlyBracketKeyword_5()); }
)

;
finally {
	restoreStackSize(stackSize);
}














rule__Config__Group_4__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Config__Group_4__0__Impl
	rule__Config__Group_4__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Config__Group_4__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getConfigAccess().getMergeFieldsKeyword_4_0()); }

	'\'mergeFields\':' 

{ after(grammarAccess.getConfigAccess().getMergeFieldsKeyword_4_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Config__Group_4__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Config__Group_4__1__Impl
	rule__Config__Group_4__2
;
finally {
	restoreStackSize(stackSize);
}

rule__Config__Group_4__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getConfigAccess().getLeftSquareBracketKeyword_4_1()); }

	'[' 

{ after(grammarAccess.getConfigAccess().getLeftSquareBracketKeyword_4_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Config__Group_4__2
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Config__Group_4__2__Impl
	rule__Config__Group_4__3
;
finally {
	restoreStackSize(stackSize);
}

rule__Config__Group_4__2__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getConfigAccess().getMergeFieldsAssignment_4_2()); }
(rule__Config__MergeFieldsAssignment_4_2)
{ after(grammarAccess.getConfigAccess().getMergeFieldsAssignment_4_2()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Config__Group_4__3
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Config__Group_4__3__Impl
	rule__Config__Group_4__4
;
finally {
	restoreStackSize(stackSize);
}

rule__Config__Group_4__3__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getConfigAccess().getGroup_4_3()); }
(rule__Config__Group_4_3__0)*
{ after(grammarAccess.getConfigAccess().getGroup_4_3()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Config__Group_4__4
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Config__Group_4__4__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Config__Group_4__4__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getConfigAccess().getRightSquareBracketKeyword_4_4()); }

	']' 

{ after(grammarAccess.getConfigAccess().getRightSquareBracketKeyword_4_4()); }
)

;
finally {
	restoreStackSize(stackSize);
}












rule__Config__Group_4_3__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Config__Group_4_3__0__Impl
	rule__Config__Group_4_3__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Config__Group_4_3__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getConfigAccess().getCommaKeyword_4_3_0()); }

	',' 

{ after(grammarAccess.getConfigAccess().getCommaKeyword_4_3_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Config__Group_4_3__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Config__Group_4_3__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Config__Group_4_3__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getConfigAccess().getMergeFieldsAssignment_4_3_1()); }
(rule__Config__MergeFieldsAssignment_4_3_1)
{ after(grammarAccess.getConfigAccess().getMergeFieldsAssignment_4_3_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}






rule__Connection__Group__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Connection__Group__0__Impl
	rule__Connection__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Connection__Group__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getConnectionAccess().getConnectionAction_0()); }
(

)
{ after(grammarAccess.getConnectionAccess().getConnectionAction_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Connection__Group__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Connection__Group__1__Impl
	rule__Connection__Group__2
;
finally {
	restoreStackSize(stackSize);
}

rule__Connection__Group__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getConnectionAccess().getLeftCurlyBracketKeyword_1()); }

	'{' 

{ after(grammarAccess.getConnectionAccess().getLeftCurlyBracketKeyword_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Connection__Group__2
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Connection__Group__2__Impl
	rule__Connection__Group__3
;
finally {
	restoreStackSize(stackSize);
}

rule__Connection__Group__2__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getConnectionAccess().getGroup_2()); }
(rule__Connection__Group_2__0)?
{ after(grammarAccess.getConnectionAccess().getGroup_2()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Connection__Group__3
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Connection__Group__3__Impl
	rule__Connection__Group__4
;
finally {
	restoreStackSize(stackSize);
}

rule__Connection__Group__3__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getConnectionAccess().getGroup_3()); }
(rule__Connection__Group_3__0)?
{ after(grammarAccess.getConnectionAccess().getGroup_3()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Connection__Group__4
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Connection__Group__4__Impl
	rule__Connection__Group__5
;
finally {
	restoreStackSize(stackSize);
}

rule__Connection__Group__4__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getConnectionAccess().getGroup_4()); }
(rule__Connection__Group_4__0)?
{ after(grammarAccess.getConnectionAccess().getGroup_4()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Connection__Group__5
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Connection__Group__5__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Connection__Group__5__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getConnectionAccess().getRightCurlyBracketKeyword_5()); }

	'}' 

{ after(grammarAccess.getConnectionAccess().getRightCurlyBracketKeyword_5()); }
)

;
finally {
	restoreStackSize(stackSize);
}














rule__Connection__Group_2__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Connection__Group_2__0__Impl
	rule__Connection__Group_2__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Connection__Group_2__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getConnectionAccess().getUrlKeyword_2_0()); }

	'\'url\':' 

{ after(grammarAccess.getConnectionAccess().getUrlKeyword_2_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Connection__Group_2__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Connection__Group_2__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Connection__Group_2__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getConnectionAccess().getUrlAssignment_2_1()); }
(rule__Connection__UrlAssignment_2_1)
{ after(grammarAccess.getConnectionAccess().getUrlAssignment_2_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}






rule__Connection__Group_3__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Connection__Group_3__0__Impl
	rule__Connection__Group_3__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Connection__Group_3__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getConnectionAccess().getUsernameKeyword_3_0()); }

	'\'username\':' 

{ after(grammarAccess.getConnectionAccess().getUsernameKeyword_3_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Connection__Group_3__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Connection__Group_3__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Connection__Group_3__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getConnectionAccess().getUsernameAssignment_3_1()); }
(rule__Connection__UsernameAssignment_3_1)
{ after(grammarAccess.getConnectionAccess().getUsernameAssignment_3_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}






rule__Connection__Group_4__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Connection__Group_4__0__Impl
	rule__Connection__Group_4__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Connection__Group_4__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getConnectionAccess().getPasswordKeyword_4_0()); }

	'\'password\':' 

{ after(grammarAccess.getConnectionAccess().getPasswordKeyword_4_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Connection__Group_4__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Connection__Group_4__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Connection__Group_4__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getConnectionAccess().getPasswordAssignment_4_1()); }
(rule__Connection__PasswordAssignment_4_1)
{ after(grammarAccess.getConnectionAccess().getPasswordAssignment_4_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}






rule__MergedField__Group__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__MergedField__Group__0__Impl
	rule__MergedField__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__MergedField__Group__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getMergedFieldAccess().getLeftCurlyBracketKeyword_0()); }

	'{' 

{ after(grammarAccess.getMergedFieldAccess().getLeftCurlyBracketKeyword_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__MergedField__Group__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__MergedField__Group__1__Impl
	rule__MergedField__Group__2
;
finally {
	restoreStackSize(stackSize);
}

rule__MergedField__Group__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getMergedFieldAccess().getGroup_1()); }
(rule__MergedField__Group_1__0)?
{ after(grammarAccess.getMergedFieldAccess().getGroup_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__MergedField__Group__2
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__MergedField__Group__2__Impl
	rule__MergedField__Group__3
;
finally {
	restoreStackSize(stackSize);
}

rule__MergedField__Group__2__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getMergedFieldAccess().getAttributeNamesKeyword_2()); }

	'\'attributeNames\':' 

{ after(grammarAccess.getMergedFieldAccess().getAttributeNamesKeyword_2()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__MergedField__Group__3
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__MergedField__Group__3__Impl
	rule__MergedField__Group__4
;
finally {
	restoreStackSize(stackSize);
}

rule__MergedField__Group__3__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getMergedFieldAccess().getLeftCurlyBracketKeyword_3()); }

	'{' 

{ after(grammarAccess.getMergedFieldAccess().getLeftCurlyBracketKeyword_3()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__MergedField__Group__4
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__MergedField__Group__4__Impl
	rule__MergedField__Group__5
;
finally {
	restoreStackSize(stackSize);
}

rule__MergedField__Group__4__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getMergedFieldAccess().getAttributeNamesAssignment_4()); }
(rule__MergedField__AttributeNamesAssignment_4)
{ after(grammarAccess.getMergedFieldAccess().getAttributeNamesAssignment_4()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__MergedField__Group__5
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__MergedField__Group__5__Impl
	rule__MergedField__Group__6
;
finally {
	restoreStackSize(stackSize);
}

rule__MergedField__Group__5__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getMergedFieldAccess().getGroup_5()); }
(rule__MergedField__Group_5__0)*
{ after(grammarAccess.getMergedFieldAccess().getGroup_5()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__MergedField__Group__6
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__MergedField__Group__6__Impl
	rule__MergedField__Group__7
;
finally {
	restoreStackSize(stackSize);
}

rule__MergedField__Group__6__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getMergedFieldAccess().getRightCurlyBracketKeyword_6()); }

	'}' 

{ after(grammarAccess.getMergedFieldAccess().getRightCurlyBracketKeyword_6()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__MergedField__Group__7
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__MergedField__Group__7__Impl
	rule__MergedField__Group__8
;
finally {
	restoreStackSize(stackSize);
}

rule__MergedField__Group__7__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getMergedFieldAccess().getFieldsKeyword_7()); }

	'fields' 

{ after(grammarAccess.getMergedFieldAccess().getFieldsKeyword_7()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__MergedField__Group__8
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__MergedField__Group__8__Impl
	rule__MergedField__Group__9
;
finally {
	restoreStackSize(stackSize);
}

rule__MergedField__Group__8__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getMergedFieldAccess().getLeftCurlyBracketKeyword_8()); }

	'{' 

{ after(grammarAccess.getMergedFieldAccess().getLeftCurlyBracketKeyword_8()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__MergedField__Group__9
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__MergedField__Group__9__Impl
	rule__MergedField__Group__10
;
finally {
	restoreStackSize(stackSize);
}

rule__MergedField__Group__9__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getMergedFieldAccess().getFieldsAssignment_9()); }
(rule__MergedField__FieldsAssignment_9)
{ after(grammarAccess.getMergedFieldAccess().getFieldsAssignment_9()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__MergedField__Group__10
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__MergedField__Group__10__Impl
	rule__MergedField__Group__11
;
finally {
	restoreStackSize(stackSize);
}

rule__MergedField__Group__10__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getMergedFieldAccess().getGroup_10()); }
(rule__MergedField__Group_10__0)*
{ after(grammarAccess.getMergedFieldAccess().getGroup_10()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__MergedField__Group__11
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__MergedField__Group__11__Impl
	rule__MergedField__Group__12
;
finally {
	restoreStackSize(stackSize);
}

rule__MergedField__Group__11__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getMergedFieldAccess().getRightCurlyBracketKeyword_11()); }

	'}' 

{ after(grammarAccess.getMergedFieldAccess().getRightCurlyBracketKeyword_11()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__MergedField__Group__12
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__MergedField__Group__12__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__MergedField__Group__12__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getMergedFieldAccess().getRightCurlyBracketKeyword_12()); }

	'}' 

{ after(grammarAccess.getMergedFieldAccess().getRightCurlyBracketKeyword_12()); }
)

;
finally {
	restoreStackSize(stackSize);
}




























rule__MergedField__Group_1__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__MergedField__Group_1__0__Impl
	rule__MergedField__Group_1__1
;
finally {
	restoreStackSize(stackSize);
}

rule__MergedField__Group_1__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getMergedFieldAccess().getTableNameKeyword_1_0()); }

	'\'tableName\':' 

{ after(grammarAccess.getMergedFieldAccess().getTableNameKeyword_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__MergedField__Group_1__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__MergedField__Group_1__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__MergedField__Group_1__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getMergedFieldAccess().getTableNameAssignment_1_1()); }
(rule__MergedField__TableNameAssignment_1_1)
{ after(grammarAccess.getMergedFieldAccess().getTableNameAssignment_1_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}






rule__MergedField__Group_5__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__MergedField__Group_5__0__Impl
	rule__MergedField__Group_5__1
;
finally {
	restoreStackSize(stackSize);
}

rule__MergedField__Group_5__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getMergedFieldAccess().getCommaKeyword_5_0()); }

	',' 

{ after(grammarAccess.getMergedFieldAccess().getCommaKeyword_5_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__MergedField__Group_5__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__MergedField__Group_5__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__MergedField__Group_5__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getMergedFieldAccess().getAttributeNamesAssignment_5_1()); }
(rule__MergedField__AttributeNamesAssignment_5_1)
{ after(grammarAccess.getMergedFieldAccess().getAttributeNamesAssignment_5_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}






rule__MergedField__Group_10__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__MergedField__Group_10__0__Impl
	rule__MergedField__Group_10__1
;
finally {
	restoreStackSize(stackSize);
}

rule__MergedField__Group_10__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getMergedFieldAccess().getCommaKeyword_10_0()); }

	',' 

{ after(grammarAccess.getMergedFieldAccess().getCommaKeyword_10_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__MergedField__Group_10__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__MergedField__Group_10__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__MergedField__Group_10__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getMergedFieldAccess().getFieldsAssignment_10_1()); }
(rule__MergedField__FieldsAssignment_10_1)
{ after(grammarAccess.getMergedFieldAccess().getFieldsAssignment_10_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}






rule__AttributeName__Group__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__AttributeName__Group__0__Impl
	rule__AttributeName__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__AttributeName__Group__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getAttributeNameAccess().getLeftCurlyBracketKeyword_0()); }

	'{' 

{ after(grammarAccess.getAttributeNameAccess().getLeftCurlyBracketKeyword_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__AttributeName__Group__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__AttributeName__Group__1__Impl
	rule__AttributeName__Group__2
;
finally {
	restoreStackSize(stackSize);
}

rule__AttributeName__Group__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getAttributeNameAccess().getGroup_1()); }
(rule__AttributeName__Group_1__0)?
{ after(grammarAccess.getAttributeNameAccess().getGroup_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__AttributeName__Group__2
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__AttributeName__Group__2__Impl
	rule__AttributeName__Group__3
;
finally {
	restoreStackSize(stackSize);
}

rule__AttributeName__Group__2__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getAttributeNameAccess().getFinalFieldKeyword_2()); }

	'finalField' 

{ after(grammarAccess.getAttributeNameAccess().getFinalFieldKeyword_2()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__AttributeName__Group__3
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__AttributeName__Group__3__Impl
	rule__AttributeName__Group__4
;
finally {
	restoreStackSize(stackSize);
}

rule__AttributeName__Group__3__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getAttributeNameAccess().getFinalFieldAssignment_3()); }
(rule__AttributeName__FinalFieldAssignment_3)
{ after(grammarAccess.getAttributeNameAccess().getFinalFieldAssignment_3()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__AttributeName__Group__4
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__AttributeName__Group__4__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__AttributeName__Group__4__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getAttributeNameAccess().getRightCurlyBracketKeyword_4()); }

	'}' 

{ after(grammarAccess.getAttributeNameAccess().getRightCurlyBracketKeyword_4()); }
)

;
finally {
	restoreStackSize(stackSize);
}












rule__AttributeName__Group_1__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__AttributeName__Group_1__0__Impl
	rule__AttributeName__Group_1__1
;
finally {
	restoreStackSize(stackSize);
}

rule__AttributeName__Group_1__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getAttributeNameAccess().getOldFieldKeyword_1_0()); }

	'oldField' 

{ after(grammarAccess.getAttributeNameAccess().getOldFieldKeyword_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__AttributeName__Group_1__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__AttributeName__Group_1__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__AttributeName__Group_1__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getAttributeNameAccess().getOldFieldAssignment_1_1()); }
(rule__AttributeName__OldFieldAssignment_1_1)
{ after(grammarAccess.getAttributeNameAccess().getOldFieldAssignment_1_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}






rule__Field__Group__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Field__Group__0__Impl
	rule__Field__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Field__Group__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getFieldAccess().getFieldAction_0()); }
(

)
{ after(grammarAccess.getFieldAccess().getFieldAction_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Field__Group__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Field__Group__1__Impl
	rule__Field__Group__2
;
finally {
	restoreStackSize(stackSize);
}

rule__Field__Group__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getFieldAccess().getLeftCurlyBracketKeyword_1()); }

	'{' 

{ after(grammarAccess.getFieldAccess().getLeftCurlyBracketKeyword_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Field__Group__2
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Field__Group__2__Impl
	rule__Field__Group__3
;
finally {
	restoreStackSize(stackSize);
}

rule__Field__Group__2__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getFieldAccess().getNameAssignment_2()); }
(rule__Field__NameAssignment_2)
{ after(grammarAccess.getFieldAccess().getNameAssignment_2()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Field__Group__3
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Field__Group__3__Impl
	rule__Field__Group__4
;
finally {
	restoreStackSize(stackSize);
}

rule__Field__Group__3__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getFieldAccess().getGroup_3()); }
(rule__Field__Group_3__0)?
{ after(grammarAccess.getFieldAccess().getGroup_3()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Field__Group__4
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Field__Group__4__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Field__Group__4__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getFieldAccess().getRightCurlyBracketKeyword_4()); }

	'}' 

{ after(grammarAccess.getFieldAccess().getRightCurlyBracketKeyword_4()); }
)

;
finally {
	restoreStackSize(stackSize);
}












rule__Field__Group_3__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Field__Group_3__0__Impl
	rule__Field__Group_3__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Field__Group_3__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getFieldAccess().getTypeKeyword_3_0()); }

	'type' 

{ after(grammarAccess.getFieldAccess().getTypeKeyword_3_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Field__Group_3__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Field__Group_3__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Field__Group_3__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getFieldAccess().getTypeAssignment_3_1()); }
(rule__Field__TypeAssignment_3_1)
{ after(grammarAccess.getFieldAccess().getTypeAssignment_3_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}







rule__Config__ConecctionAssignment_3
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getConfigAccess().getConecctionConnectionParserRuleCall_3_0()); }
	ruleConnection{ after(grammarAccess.getConfigAccess().getConecctionConnectionParserRuleCall_3_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__Config__MergeFieldsAssignment_4_2
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getConfigAccess().getMergeFieldsMergedFieldParserRuleCall_4_2_0()); }
	ruleMergedField{ after(grammarAccess.getConfigAccess().getMergeFieldsMergedFieldParserRuleCall_4_2_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__Config__MergeFieldsAssignment_4_3_1
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getConfigAccess().getMergeFieldsMergedFieldParserRuleCall_4_3_1_0()); }
	ruleMergedField{ after(grammarAccess.getConfigAccess().getMergeFieldsMergedFieldParserRuleCall_4_3_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__Connection__UrlAssignment_2_1
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getConnectionAccess().getUrlEStringParserRuleCall_2_1_0()); }
	ruleEString{ after(grammarAccess.getConnectionAccess().getUrlEStringParserRuleCall_2_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__Connection__UsernameAssignment_3_1
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getConnectionAccess().getUsernameEStringParserRuleCall_3_1_0()); }
	ruleEString{ after(grammarAccess.getConnectionAccess().getUsernameEStringParserRuleCall_3_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__Connection__PasswordAssignment_4_1
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getConnectionAccess().getPasswordEStringParserRuleCall_4_1_0()); }
	ruleEString{ after(grammarAccess.getConnectionAccess().getPasswordEStringParserRuleCall_4_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__MergedField__TableNameAssignment_1_1
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getMergedFieldAccess().getTableNameEStringParserRuleCall_1_1_0()); }
	ruleEString{ after(grammarAccess.getMergedFieldAccess().getTableNameEStringParserRuleCall_1_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__MergedField__AttributeNamesAssignment_4
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getMergedFieldAccess().getAttributeNamesAttributeNameParserRuleCall_4_0()); }
	ruleAttributeName{ after(grammarAccess.getMergedFieldAccess().getAttributeNamesAttributeNameParserRuleCall_4_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__MergedField__AttributeNamesAssignment_5_1
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getMergedFieldAccess().getAttributeNamesAttributeNameParserRuleCall_5_1_0()); }
	ruleAttributeName{ after(grammarAccess.getMergedFieldAccess().getAttributeNamesAttributeNameParserRuleCall_5_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__MergedField__FieldsAssignment_9
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getMergedFieldAccess().getFieldsFieldParserRuleCall_9_0()); }
	ruleField{ after(grammarAccess.getMergedFieldAccess().getFieldsFieldParserRuleCall_9_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__MergedField__FieldsAssignment_10_1
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getMergedFieldAccess().getFieldsFieldParserRuleCall_10_1_0()); }
	ruleField{ after(grammarAccess.getMergedFieldAccess().getFieldsFieldParserRuleCall_10_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__AttributeName__OldFieldAssignment_1_1
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getAttributeNameAccess().getOldFieldEStringParserRuleCall_1_1_0()); }
	ruleEString{ after(grammarAccess.getAttributeNameAccess().getOldFieldEStringParserRuleCall_1_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__AttributeName__FinalFieldAssignment_3
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getAttributeNameAccess().getFinalFieldFieldCrossReference_3_0()); }
(
{ before(grammarAccess.getAttributeNameAccess().getFinalFieldFieldEStringParserRuleCall_3_0_1()); }
	ruleEString{ after(grammarAccess.getAttributeNameAccess().getFinalFieldFieldEStringParserRuleCall_3_0_1()); }
)
{ after(grammarAccess.getAttributeNameAccess().getFinalFieldFieldCrossReference_3_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__Field__NameAssignment_2
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getFieldAccess().getNameEStringParserRuleCall_2_0()); }
	ruleEString{ after(grammarAccess.getFieldAccess().getNameEStringParserRuleCall_2_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__Field__TypeAssignment_3_1
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getFieldAccess().getTypeFieldTypeEnumRuleCall_3_1_0()); }
	ruleFieldType{ after(grammarAccess.getFieldAccess().getTypeFieldTypeEnumRuleCall_3_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


RULE_ID : '^'? ('a'..'z'|'A'..'Z'|'_') ('a'..'z'|'A'..'Z'|'_'|'0'..'9')*;

RULE_INT : ('0'..'9')+;

RULE_STRING : ('"' ('\\' .|~(('\\'|'"')))* '"'|'\'' ('\\' .|~(('\\'|'\'')))* '\'');

RULE_ML_COMMENT : '/*' ( options {greedy=false;} : . )*'*/';

RULE_SL_COMMENT : '//' ~(('\n'|'\r'))* ('\r'? '\n')?;

RULE_WS : (' '|'\t'|'\r'|'\n')+;

RULE_ANY_OTHER : .;


